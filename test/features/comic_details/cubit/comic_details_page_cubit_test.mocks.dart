// Mocks generated by Mockito 5.4.2 from annotations
// in marvel_comics_app/test/features/comic_details/cubit/comic_details_page_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:marvel_comics_app/data/comics_remote_data_source.dart' as _i2;
import 'package:marvel_comics_app/models/single_comic_model.dart' as _i5;
import 'package:marvel_comics_app/repositories/comics_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeComicsRemoteDataSource_0 extends _i1.SmartFake
    implements _i2.ComicsRemoteDataSource {
  _FakeComicsRemoteDataSource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ComicsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockComicsRepository extends _i1.Mock implements _i3.ComicsRepository {
  MockComicsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ComicsRemoteDataSource get comicsRemoteDataSource => (super.noSuchMethod(
        Invocation.getter(#comicsRemoteDataSource),
        returnValue: _FakeComicsRemoteDataSource_0(
          this,
          Invocation.getter(#comicsRemoteDataSource),
        ),
      ) as _i2.ComicsRemoteDataSource);
  @override
  _i4.Future<List<_i5.SingleComicModel>> fetchComics() => (super.noSuchMethod(
        Invocation.method(
          #fetchComics,
          [],
        ),
        returnValue: _i4.Future<List<_i5.SingleComicModel>>.value(
            <_i5.SingleComicModel>[]),
      ) as _i4.Future<List<_i5.SingleComicModel>>);
  @override
  _i4.Future<List<_i5.SingleComicModel>> searchComicByTitle(
          {required String? title}) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchComicByTitle,
          [],
          {#title: title},
        ),
        returnValue: _i4.Future<List<_i5.SingleComicModel>>.value(
            <_i5.SingleComicModel>[]),
      ) as _i4.Future<List<_i5.SingleComicModel>>);
  @override
  _i4.Future<void> redirectToExternalSite({required String? externalLink}) =>
      (super.noSuchMethod(
        Invocation.method(
          #redirectToExternalSite,
          [],
          {#externalLink: externalLink},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
